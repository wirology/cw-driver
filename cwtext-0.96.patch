diff -ruN backup/cwtext-0.96/cwtext-0.96/cwpcm.c cwtext-0.96/cwpcm.c
--- backup/cwtext-0.96/cwtext-0.96/cwpcm.c	2008-01-07 10:26:50.000000000 -0500
+++ cwtext-0.96/cwpcm.c	2020-06-06 14:16:18.744847323 -0400
@@ -37,6 +37,7 @@
 
 /* 900 Hz */
 #define PITCH 800
+#define MAX_PITCH 8000
 /* volume on 0..100 percent */
 #define VOLUME 70
 
@@ -105,11 +106,11 @@
  fflush(out);
 }
 
-void setupVoice(int hz, int amp) {
+void setupVoice(int hz, int amp, int risetime, int falltime) {
   /* freq, amplitude, zero, sample rate */
  hvox = voiceFactory(hz, amp, 128, sample_rate);
- setRisetime(hvox, RISETIME);
- setFalltime(hvox, FALLTIME);
+ setRisetime(hvox, risetime);
+ setFalltime(hvox, falltime);
 }
 
 int getInt(char *s, int low, int high) {
@@ -154,10 +155,10 @@
    wwpm = WEXTRA;
   }
   if (ARG_IS("-f:")) {
-   pitch = getInt(argv[x]+3, 40, 3200);
+   pitch = getInt(argv[x]+3, 40, MAX_PITCH);
   } else if (ARG_IS("-f")) {
    if (++x < argc) {
-    pitch = getInt(argv[x], 40, 3200);
+    pitch = getInt(argv[x], 40, MAX_PITCH);
    }
    continue;
   }
@@ -195,7 +196,13 @@
 
  cTime = getCharacterTime(cwpm);
  sTime = getSpaceTime(cwpm, wwpm);
- setupVoice(pitch, volume*127/100);
+ int risetime = RISETIME / wwpm;
+ int falltime = FALLTIME / wwpm;
+ if (risetime > RISETIME) { risetime = RISETIME; }
+ if (falltime > FALLTIME) { falltime = FALLTIME; }
+ if (risetime < 1) { risetime = 1; }
+ if (falltime > 1) { falltime = 1; }
+ setupVoice(pitch, volume*127/100, risetime, falltime);
  // you might want to adjust falltime for high rates:
  // if (cwpm > 20) setFalltime(hvox, 0);
 
diff -ruN backup/cwtext-0.96/cwtext-0.96/gencw.py cwtext-0.96/gencw.py
--- backup/cwtext-0.96/cwtext-0.96/gencw.py	2002-08-08 23:13:15.000000000 -0400
+++ cwtext-0.96/gencw.py	2020-06-04 19:27:34.000000000 -0400
@@ -39,7 +39,7 @@
 '2':'..---', '3':'...--', '4':'....-', '5':'.....',
 '6':'-....', '7':'--...', '8':'---..', '9':'----.',
 '.':'.-.-.-', ',':'--..--', ':':'---...', '?':'..--..', '-':'-....-',
-'/':'-..-.', '=':'.-.-.', '@': '...-.-', '!':'...-.-', ' ':' '}
+'/':'-..-.', '=':'-...-', '+':'.-.-.', '@': '...-.-', '!':'...-.-', ' ':' '}
 
 from string import lower
 from string import find
@@ -50,7 +50,7 @@
 # compact version possible, but this fits my needs.
 def mkcw_h():
  crypt=".....-----....-.-.--..--..-...--.- "
- plain='.,:?-/=@!0123456789abcdefghijklmnopqrstuvwxyz'
+ plain='+.,:?-/=@!0123456789abcdefghijklmnopqrstuvwxyz'
  code=''
  for n in plain:
   slot = find(crypt, morse[n])
@@ -63,6 +63,8 @@
    crypt = crypt + morse[n]
    print n, hex(find(crypt, morse[n])), len(morse[n]), hex(len(morse[n]))
  print "/* International Morse Code */"
+ print "/* coding: the last 5 bits are an offset into the crypt, the first 3 bits the length of the code */"
+ print "/* generated by gencw.py, don't modify */"
  print "#define CWSTARTMASK (0x1f)"
  print "#define CWSIZEMASK (0x07)"
  print "#define CWSIZESHIFT (0x05)"
@@ -70,6 +72,7 @@
  print "char *plain=\"%s\";" % plain
  print "char *code=\"%s\";" % code
 
+
 if __name__ == '__main__':
  mkcw_h()
 	
diff -ruN backup/cwtext-0.96/cwtext-0.96/makefile cwtext-0.96/makefile
--- backup/cwtext-0.96/cwtext-0.96/makefile	2004-12-16 07:15:22.000000000 -0500
+++ cwtext-0.96/makefile	2020-06-06 12:17:30.759503001 -0400
@@ -1,5 +1,7 @@
 PREFIX=/usr/local
 
+CFLAGS=-Ofast
+
 ALL: cwtext cwpcm cwmm
 
 install: ALL
@@ -11,13 +13,13 @@
 	${CC} ${CFLAGS} -o cwmm $^
 	
 cwpcm: cwpcm.o morse.o pcm.o
-	${CC} ${CFLAGS} -o cwpcm -lm $^
+	${CC} ${CFLAGS} -o cwpcm  $^ -lm
 
 cwtext: cwtext.o morse.o
 	${CC} ${CFLAGS} -o cwtext  $^
 
 testpcm: testpcm.o pcm.o
-	${CC} ${CFLAGS} -o testpcm -lm $^
+	${CC} ${CFLAGS} -o testpcm $^ -lm
 
 cwpcm.o: cwpcm.c morse.h pcm.h
 	${CC} ${CFLAGS} -c cwpcm.c
